{
  "version": 3,
  "sources": ["../../node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/commons.js", "../../node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js", "../../node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js", "../../node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js", "../../node_modules/socket.io-client/node_modules/engine.io-parser/build/esm/index.js", "../../node_modules/socket.io-client/node_modules/@socket.io/component-emitter/index.mjs", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/globalThis.browser.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/util.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transport.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/yeast.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/parseqs.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/has-cors.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/polling.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/websocket.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/transports/index.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/contrib/parseuri.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/socket.js", "../../node_modules/socket.io-client/node_modules/engine.io-client/build/esm/index.js", "../../node_modules/socket.io-client/build/esm/url.js", "../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/is-binary.js", "../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/binary.js", "../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/index.js", "../../node_modules/socket.io-client/build/esm/on.js", "../../node_modules/socket.io-client/build/esm/socket.js", "../../node_modules/socket.io-client/build/esm/contrib/backo2.js", "../../node_modules/socket.io-client/build/esm/manager.js", "../../node_modules/socket.io-client/build/esm/index.js", "client.js", "../../node_modules/@domql/globals/index.js", "../../node_modules/@domql/utils/types.js", "../../node_modules/@domql/utils/object.js", "../../node_modules/@domql/utils/node.js"],
  "sourcesContent": ["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n", "import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n", "const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n", "import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n", "import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n", "/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n", "export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n", "import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n", "import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n", "// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n", "// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n", "// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n", "// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n", "import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n", "import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n", "import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n", "import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n", "// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n", "import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n", "import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n", "import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n", "const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n", "import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n", "import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n", "export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n", "import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n", "/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n", "import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n", "import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n", "'use strict'\n\nimport { window } from '@domql/globals'\nimport { isFunction, isArray } from '@domql/utils'\nimport * as asd from '@domql/utils'\nimport io from 'socket.io-client/dist/socket.io.js'\n\nconst ENV = process.env.NODE_ENV\n\nconst SOCKET_BACKEND_URL = window.location\n  ?.host.includes('local')\n  ? 'localhost:13335'\n  : 'socket.symbols.app'\n\nlet socket\nconst defautlOpts = {}\n\nexport const connect = (key, options = {}) => {\n  const socketUrls = isArray(options.socketUrl) ? options.socketUrl : [options.socketUrl || SOCKET_BACKEND_URL]\n  const primaryUrl = socketUrls[0]\n  const secondaryUrl = socketUrls[1] || 'socket.symbols.app'\n\n  socket = io(primaryUrl || SOCKET_BACKEND_URL)\n\n  socket.on('connect', () => {\n    if (ENV === 'test' || ENV === 'development') {\n      console.log(\n        `Connected to %c${primaryUrl || SOCKET_BACKEND_URL} %c${key} %c${socket.id}`,\n        'font-weight: bold; color: green;',\n        'font-weight: bold;',\n        ''\n      )\n    }\n\n    socket.emit('initConnect', options)\n\n    try {\n      if (isFunction(options.onConnect)) options.onConnect(socket.id, socket)\n    } catch (e) {\n      console.error(e)\n    }\n  })\n\n  let tryConnect = 0\n  const tryConnectMax = 1\n  socket.on('connect_error', (err) => {\n    console.log(err)\n    console.log(`event: connect_error | reason: ${err.message}`)\n    try {\n      if (isFunction(options.onError)) options.onError(err, socket)\n      if (tryConnect === tryConnectMax) {\n        socket.disconnect()\n\n        if (primaryUrl !== secondaryUrl) {\n          if (ENV === 'test' || ENV === 'development') {\n            console.log(\n              'Could not connect to %c' + primaryUrl + '%c, reconnecting to %c' + secondaryUrl,\n              'font-weight: bold; color: red;',\n              '',\n              'font-weight: bold; color: green;'\n            )\n          }\n\n          connect(key, { ...options, socketUrl: secondaryUrl })\n        }\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    tryConnect++\n  })\n\n  socket.on('disconnect', (reason) => {\n    console.log(`event: disconnect | reason: ${reason}`)\n    try {\n      if (isFunction(options.onDisconnect)) options.onDisconnect(reason, socket)\n    } catch (e) {\n      console.error(e)\n    }\n  })\n\n  socket.onAny((event, ...args) => {\n    if (event === 'connect') return\n\n    try {\n      if (isFunction(options.onChange)) options.onChange(event, args[0], socket)\n    } catch (e) {\n      console.error(e)\n    }\n  })\n}\n\nexport const send = (event = 'change', changes, options) => {\n  socket.emit(event, changes, { ...options, ...defautlOpts })\n}\n\nexport const disconnect = () => {\n  socket.disconnect()\n}\n", "'use strict'\n\nconst global = globalThis\nconst self = globalThis\nconst window = globalThis\nconst document = window.document // eslint-disable-line\n\nexport { global, self, window, document }\n", "'use strict'\n\nimport { window } from '@domql/globals'\nimport { HTML_TAGS } from '@domql/tags'\n\nexport const isValidHtmlTag = arg => HTML_TAGS.body.indexOf(arg)\n\nexport const isObject = arg => {\n  if (arg === null) return false\n  return (typeof arg === 'object') && (arg.constructor === Object)\n}\n\nexport const isString = arg => typeof arg === 'string'\n\nexport const isNumber = arg => typeof arg === 'number'\n\nexport const isFunction = arg => typeof arg === 'function'\n\nexport const isBoolean = arg => arg === true || arg === false\n\nexport const isNull = arg => arg === null\n\nexport const isArray = arg => Array.isArray(arg)\n\nexport const isObjectLike = arg => {\n  if (arg === null) return false\n  // if (isArray(arg)) return false\n  return (typeof arg === 'object')\n}\n\nexport const isNode = obj => {\n  return (\n    typeof window.Node === 'object'\n      ? obj instanceof window.Node\n      : obj && typeof obj === 'object' && typeof obj.nodeType === 'number' && typeof obj.nodeName === 'string'\n  )\n}\n\nexport const isHtmlElement = obj => {\n  return (\n    typeof window.HTMLElement === 'object'\n      ? obj instanceof window.HTMLElement // DOM2\n      : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string'\n  )\n}\n\nexport const isDefined = arg => {\n  return isObject(arg) ||\n    isObjectLike(arg) ||\n    isString(arg) ||\n    isNumber(arg) ||\n    isFunction(arg) ||\n    isArray(arg) ||\n    isObjectLike(arg) ||\n    isBoolean(arg) ||\n    isNull(arg)\n}\n\nexport const isUndefined = arg => {\n  return arg === undefined\n}\n\nexport const TYPES = {\n  boolean: isBoolean,\n  array: isArray,\n  object: isObject,\n  string: isString,\n  number: isNumber,\n  null: isNull,\n  function: isFunction,\n  objectLike: isObjectLike,\n  node: isNode,\n  htmlElement: isHtmlElement,\n  defined: isDefined\n}\n\nexport const is = (arg) => {\n  return (...args) => {\n    return args.map(val => TYPES[val](arg)).filter(v => v).length > 0\n  }\n}\n\nexport const isNot = (arg) => {\n  return (...args) => {\n    return args.map(val => TYPES[val](arg)).filter(v => v).length === 0\n  }\n}\n", "'use strict'\n\nimport { isFunction, isObjectLike, isObject, isArray, isString } from './types'\n\nexport const exec = (param, element, state) => {\n  if (isFunction(param)) return param(element, state || element.state)\n  return param\n}\n\nexport const map = (obj, extention, element) => {\n  for (const e in extention) {\n    obj[e] = exec(extention[e], element)\n  }\n}\n\nexport const merge = (element, obj) => {\n  for (const e in obj) {\n    const elementProp = element[e]\n    const objProp = obj[e]\n    if (elementProp === undefined) {\n      element[e] = objProp\n    }\n  }\n  return element\n}\n\nexport const deepMerge = (element, extend) => {\n  // console.groupCollapsed('deepMerge:')\n  for (const e in extend) {\n    const elementProp = element[e]\n    const extendProp = extend[e]\n    // const cachedProps = cache.props\n    if (e === 'parent' || e === 'props') continue\n    if (elementProp === undefined) {\n      element[e] = extendProp\n    } else if (isObjectLike(elementProp) && isObject(extendProp)) {\n      deepMerge(elementProp, extendProp)\n    }\n  }\n  // console.groupEnd('deepMerge:')\n  return element\n}\n\nexport const clone = obj => {\n  const o = {}\n  for (const prop in obj) {\n    if (prop === 'node') continue\n    o[prop] = obj[prop]\n  }\n  return o\n}\n\n/**\n * Deep cloning of object\n */\nexport const deepClone = (obj) => {\n  if (isArray(obj)) {\n    return obj.map(deepClone)\n  }\n  const o = {}\n  for (const prop in obj) {\n    let objProp = obj[prop]\n    if (prop === 'extend' && isArray(objProp)) {\n      objProp = mergeArray(objProp)\n    }\n    if (isArray(objProp)) {\n      o[prop] = objProp.map(v => isObject(v) ? deepClone(v) : v)\n    } else if (isObject(objProp)) {\n      o[prop] = deepClone(objProp)\n    } else o[prop] = objProp\n  }\n  return o\n}\n\n/**\n * Stringify object\n */\nexport const deepStringify = (obj, stringified = {}) => {\n  console.log(obj)\n  for (const prop in obj) {\n    const objProp = obj[prop]\n    if (isFunction(objProp)) {\n      stringified[prop] = objProp.toString()\n    } else stringified[prop] = objProp\n    if (isObject(objProp)) deepStringify(stringified[prop], stringified[prop])\n  }\n  return stringified\n}\n\n/**\n * Detringify object\n */\nexport const deepDestringify = (obj, stringified = {}) => {\n  for (const prop in obj) {\n    const objProp = obj[prop]\n    if (isString(objProp)) {\n      if (objProp.slice(0, 1) === '(') {\n        try {\n          stringified[prop] = eval(objProp) // eslint-disable-line\n        } catch (e) { if (e) stringified[prop] = objProp }\n      }\n    } else stringified[prop] = objProp\n    if (isObject(objProp)) deepDestringify(stringified[prop], stringified[prop])\n  }\n  return stringified\n}\n\n/**\n * Overwrites object properties with another\n */\nexport const overwrite = (element, params, options) => {\n  const { ref } = element\n  const changes = {}\n\n  for (const e in params) {\n    if (e === 'props') continue\n\n    const elementProp = element[e]\n    const paramsProp = params[e]\n\n    if (paramsProp) {\n      ref.__cache[e] = changes[e] = elementProp\n      ref[e] = paramsProp\n    }\n  }\n\n  return changes\n}\n\nexport const diff = (obj, original, cache) => {\n  const changes = cache || {}\n  for (const e in obj) {\n    if (e === 'ref') continue\n    const originalProp = original[e]\n    const objProp = obj[e]\n    if (isObjectLike(originalProp) && isObjectLike(objProp)) {\n      changes[e] = {}\n      diff(originalProp, objProp, changes[e])\n    } else if (objProp !== undefined) {\n      changes[e] = objProp\n    }\n  }\n  return changes\n}\n\n/**\n * Overwrites object properties with another\n */\nexport const overwriteObj = (params, obj) => {\n  const changes = {}\n\n  for (const e in params) {\n    const objProp = obj[e]\n    const paramsProp = params[e]\n\n    if (paramsProp) {\n      obj[e] = changes[e] = objProp\n    }\n  }\n\n  return changes\n}\n\n/**\n * Overwrites DEEPly object properties with another\n */\nexport const overwriteDeep = (params, obj) => {\n  for (const e in params) {\n    const objProp = obj[e]\n    const paramsProp = params[e]\n    if (isObjectLike(objProp) && isObjectLike(paramsProp)) {\n      overwriteDeep(objProp, paramsProp)\n    } else if (paramsProp !== undefined) {\n      obj[e] = paramsProp\n    }\n  }\n  return obj\n}\n\n/**\n * Overwrites object properties with another\n */\nexport const mergeIfExisted = (a, b) => {\n  if (isObjectLike(a) && isObjectLike(b)) return deepMerge(a, b)\n  return a || b\n}\n\n/**\n * Merges array extendtypes\n */\nexport const mergeArray = (arr) => {\n  return arr.reduce((a, c) => deepMerge(a, deepClone(c)), {})\n}\n\n/**\n * Merges array extendtypes\n */\nexport const mergeAndCloneIfArray = obj => {\n  return isArray(obj) ? mergeArray(obj) : deepClone(obj)\n}\n\n/**\n * Overwrites object properties with another\n */\nexport const flattenRecursive = (param, prop, stack = []) => {\n  const objectized = mergeAndCloneIfArray(param)\n  stack.push(objectized)\n\n  const extendOfExtend = objectized[prop]\n  if (extendOfExtend) flattenRecursive(extendOfExtend, prop, stack)\n\n  delete objectized[prop]\n\n  return stack\n}\n\nexport const isEqualDeep = (param, element) => {\n  if (param === element) return true\n  if (!param || !element) return false\n  for (const prop in param) {\n    const paramProp = param[prop]\n    const elementProp = element[prop]\n    if (isObjectLike(paramProp)) {\n      const isEqual = isEqualDeep(paramProp, elementProp)\n      if (!isEqual) return false\n    } else {\n      const isEqual = paramProp === elementProp\n      if (!isEqual) return false\n    }\n  }\n  return true\n}\n", "'use strict'\n\nexport const cleanWithNode = extend => delete extend.node && extend\n\nexport const createID = (function * () {\n  let index = 1\n  while (index < index + 1) {\n    yield index++\n  }\n}())\n"],
  "mappings": "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",
  "names": ["PACKET_TYPES", "Object", "create", "PACKET_TYPES_REVERSE", "keys", "forEach", "key", "ERROR_PACKET", "type", "data", "withNativeBlob", "Blob", "prototype", "toString", "call", "withNativeArrayBuffer", "ArrayBuffer", "isView", "obj", "buffer", "encodePacket", "supportsBinary", "callback", "encodeBlobAsBase64", "fileReader", "FileReader", "onload", "content", "result", "split", "readAsDataURL", "chars", "lookup", "Uint8Array", "i", "length", "charCodeAt", "decode", "base64", "bufferLength", "len", "p", "encoded1", "encoded2", "encoded3", "encoded4", "arraybuffer", "bytes", "decodePacket", "encodedPacket", "binaryType", "mapBinary", "charAt", "decodeBase64Packet", "substring", "packetType", "decoded", "SEPARATOR", "String", "fromCharCode", "encodePayload", "packets", "encodedPackets", "Array", "count", "packet", "join", "decodePayload", "encodedPayload", "decodedPacket", "push", "protocol", "Emitter", "mixin", "on", "addEventListener", "event", "fn", "_callbacks", "once", "off", "apply", "arguments", "removeListener", "removeAllListeners", "removeEventListener", "callbacks", "cb", "splice", "emit", "args", "slice", "emitReserved", "listeners", "hasListeners", "globalThisShim", "self", "window", "Function", "pick", "attr", "reduce", "acc", "k", "hasOwnProperty", "NATIVE_SET_TIMEOUT", "setTimeout", "NATIVE_CLEAR_TIMEOUT", "clearTimeout", "installTimerFunctions", "opts", "useNativeTimers", "setTimeoutFn", "bind", "globalThis", "clearTimeoutFn", "BASE64_OVERHEAD", "byteLength", "utf8Length", "Math", "ceil", "size", "str", "c", "l", "TransportError", "reason", "description", "context", "Error", "Transport", "writable", "query", "readyState", "socket", "doOpen", "doClose", "onClose", "send", "write", "onPacket", "details", "alphabet", "map", "seed", "prev", "encode", "num", "encoded", "floor", "yeast", "now", "Date", "encodeURIComponent", "qs", "qry", "pairs", "pair", "decodeURIComponent", "value", "XMLHttpRequest", "err", "hasCORS", "XHR", "xdomain", "e", "concat", "empty", "hasXHR2", "xhr", "responseType", "Polling", "polling", "location", "isSSL", "port", "xd", "hostname", "xs", "secure", "forceBase64", "poll", "onPause", "pause", "total", "doPoll", "onOpen", "close", "doWrite", "schema", "timestampRequests", "timestampParam", "sid", "b64", "Number", "encodedQuery", "ipv6", "indexOf", "path", "Request", "uri", "req", "request", "method", "xhrStatus", "onError", "onData", "pollXhr", "async", "undefined", "xscheme", "open", "extraHeaders", "setDisableHeaderCheck", "setRequestHeader", "withCredentials", "requestTimeout", "timeout", "onreadystatechange", "status", "onLoad", "document", "index", "requestsCount", "requests", "cleanup", "fromError", "abort", "responseText", "attachEvent", "unloadHandler", "terminationEvent", "nextTick", "isPromiseAvailable", "Promise", "resolve", "then", "WebSocket", "MozWebSocket", "usingBrowserWebSocket", "defaultBinaryType", "isReactNative", "navigator", "product", "toLowerCase", "WS", "check", "protocols", "headers", "ws", "addEventListeners", "onopen", "autoUnref", "_socket", "unref", "onclose", "closeEvent", "onmessage", "ev", "onerror", "_loop", "lastPacket", "transports", "websocket", "re", "parts", "parse", "src", "b", "replace", "m", "exec", "source", "host", "authority", "ipv6uri", "pathNames", "queryKey", "regx", "names", "$0", "$1", "$2", "Socket", "writeBuffer", "prevBufferLen", "agent", "upgrade", "rememberUpgrade", "rejectUnauthorized", "perMessageDeflate", "threshold", "transportOptions", "closeOnBeforeunload", "id", "upgrades", "pingInterval", "pingTimeout", "pingTimeoutTimer", "beforeunloadEventListener", "transport", "offlineEventListener", "name", "EIO", "priorWebsocketSuccess", "createTransport", "shift", "setTransport", "onDrain", "failed", "onTransportOpen", "msg", "upgrading", "flush", "freezeTransport", "error", "onTransportClose", "onupgrade", "to", "probe", "onHandshake", "JSON", "resetPingTimeout", "sendPacket", "code", "filterUpgrades", "maxPayload", "getWritablePackets", "shouldCheckPayloadSize", "payloadSize", "options", "compress", "cleanupAndClose", "waitForUpgrade", "filteredUpgrades", "j", "url", "loc", "test", "href", "withNativeFile", "File", "isBinary", "hasBinary", "toJSON", "isArray", "deconstructPacket", "buffers", "packetData", "pack", "_deconstructPacket", "attachments", "placeholder", "_placeholder", "newData", "reconstructPacket", "_reconstructPacket", "isIndexValid", "PacketType", "Encoder", "replacer", "EVENT", "ACK", "BINARY_EVENT", "BINARY_ACK", "encodeAsBinary", "encodeAsString", "nsp", "stringify", "deconstruction", "unshift", "Decoder", "reviver", "reconstructor", "decodeString", "BinaryReconstructor", "takeBinaryData", "start", "buf", "next", "payload", "tryParse", "substr", "isPayloadValid", "finishedReconstruction", "CONNECT", "DISCONNECT", "CONNECT_ERROR", "reconPack", "binData", "subDestroy", "RESERVED_EVENTS", "freeze", "connect", "connect_error", "disconnect", "disconnecting", "newListener", "io", "connected", "receiveBuffer", "sendBuffer", "ids", "acks", "flags", "auth", "_autoConnect", "subs", "onpacket", "subEvents", "_readyState", "ack", "pop", "_registerAckCallback", "isTransportWritable", "engine", "discardPacket", "notifyOutgoingListeners", "timer", "_packet", "sameNamespace", "onconnect", "onevent", "onack", "ondisconnect", "destroy", "message", "emitEvent", "_anyListeners", "listener", "sent", "emitBuffered", "_anyOutgoingListeners", "Backoff", "ms", "min", "max", "factor", "jitter", "attempts", "duration", "pow", "rand", "random", "deviation", "reset", "setMin", "setMax", "setJitter", "Manager", "_a", "nsps", "reconnection", "reconnectionAttempts", "Infinity", "reconnectionDelay", "reconnectionDelayMax", "randomizationFactor", "backoff", "_parser", "parser", "encoder", "decoder", "autoConnect", "v", "_reconnection", "_reconnectionAttempts", "_reconnectionDelay", "_randomizationFactor", "_reconnectionDelayMax", "_timeout", "_reconnecting", "reconnect", "Engine", "skipReconnect", "openSubDestroy", "errorSub", "maybeReconnectOnOpen", "onping", "ondata", "ondecoded", "add", "active", "_close", "delay", "onreconnect", "attempt", "cache", "parsed", "newConnection", "forceNew", "multiplex", "window", "document", "obj", "objProp", "prop", "stringified", "window", "io"]
}
